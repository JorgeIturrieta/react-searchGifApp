{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","prototype","PropTypes","string","isRequired","GifExpertApp","defaultCategories","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OAEQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBC,QAAQC,IAAI,yBACZV,GAAc,SAAAW,GAAC,OAAKT,GAAL,mBAAmBS,OAClCR,EAAc,MAMd,SACI,uBAAOS,KAAK,OACRC,MAAOX,EACPY,SAnBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,OACvBJ,QAAQC,IAAI,mC,+BCPPM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAE3B,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCGPO,EAAc,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,wCAAf,UACI,kCAAKJ,EAAL,OACA,qBAAKK,IAAKf,EAAKgB,IAAMN,Q,OCJpBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IACGqB,EDX2BK,CAAa1B,GAAjCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QACtB,OACI,qCACI,oBAAIJ,UAAU,kCAAd,SAAiDhB,IAChDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACV,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aAWrCQ,EAAQQ,UAAY,CAChB3B,S,OAAW4B,EAAUC,OAAOC,YEpBzB,IAAMC,EAAe,SAAC,GAA+B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,IAGnBhD,mBAASgD,GAHU,mBAGhDC,EAHgD,KAGpClD,EAHoC,KAKvD,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACKkD,EAAWxB,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAECA,SAAaA,GADPA,Y,MCd3BkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0051f440.chunk.js","sourcesContent":["import React, { useState } from 'react' ;\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n        console.log('handleInputChange llamado');\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();      \n       \n        if( inputValue.trim().length>2){\n            console.log('SetCategories llamado');\n            setCategories(c => [inputValue,...c ]);\n            setInputValue('');\n        }\n       \n    }\n    return (\n        \n            <form onSubmit= {handleSubmit}>\n                <input type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>       \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kjjK42fyYGazUSnmR4NjUmk57boBGmEb`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map((img) => {\n\n        return {\n\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n\n}","import React from 'react' ;\nimport PropTypes from 'prop-types';\n\nexport const GifGridItem = ( {title,url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__swing\">\n            <p> {title} </p>\n            <img src={url} alt= {title}/>            \n        </div>\n    )       \n}\n\nGifGridItem.propTypes = {\n title: PropTypes.string.isRequired ,\n url: PropTypes.string.isRequired \n}\n/* GifGridItem.defaultProps = {\n    title: 'Default Title' ,\n    url : 'https://localhost/algo.jpg' ,\n}\n */","import { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\nimport PropTypes from 'prop-types';\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__tada\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n            { <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n\n                        />))\n                }\n            </div>\n            }\n        </>\n    )\n}\n\nGifGrid.prototype = {\n    category : PropTypes.string.isRequired\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false,\n                });\n            })\n    }, [category]);\n    return state;\n}","\nimport React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = ( {defaultCategories = []}) => {\n\n\n    const [categories, setCategories] = useState(defaultCategories);\n\n    return (\n        <>\n            <h1>GifExpertApp</h1>\n            <hr />\n            <AddCategory setCategories={setCategories} />\n            <ol>\n                {categories.map((category) => (\n                    <GifGrid\n                     key= {category}\n                     category = { category }/>\n                )\n                   \n                )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css' ;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}